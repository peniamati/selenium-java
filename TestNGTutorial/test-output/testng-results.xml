<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-20T10:47:07 ART" name="Loan Department" finished-at="2024-02-20T10:47:07 ART" duration-ms="235">
    <groups>
      <group name="Smoke">
        <method signature="day2.ploan()[pri:0, instance:test.day2@34123d65]" name="ploan" class="test.day2"/>
        <method signature="day4.MobileLoginCarloan()[pri:0, instance:test.day4@59474f18]" name="MobileLoginCarloan" class="test.day4"/>
        <method signature="day3.MobileLoginCarloan()[pri:0, instance:test.day3@3857f613]" name="MobileLoginCarloan" class="test.day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-02-20T10:47:07 ART" name="Personal Loan" finished-at="2024-02-20T10:47:07 ART" duration-ms="234">
      <class name="test.day4">
        <test-method signature="LoginAPIcarLoan()[pri:0, instance:test.day4@59474f18]" started-at="2024-02-20T10:47:07 ART" name="LoginAPIcarLoan" finished-at="2024-02-20T10:47:07 ART" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIcarLoan -->
        <test-method signature="MobileLoginCarloan()[pri:0, instance:test.day4@59474f18]" started-at="2024-02-20T10:47:07 ART" name="MobileLoginCarloan" finished-at="2024-02-20T10:47:07 ART" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarloan -->
        <test-method signature="WebloginCarloan(java.lang.String)[pri:0, instance:test.day4@59474f18]" started-at="2024-02-20T10:47:07 ART" name="WebloginCarloan" finished-at="2024-02-20T10:47:07 ART" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginCarloan -->
      </class> <!-- test.day4 -->
      <class name="test.day2">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:test.day2@34123d65]" started-at="2024-02-20T10:47:07 ART" name="prerequisite" finished-at="2024-02-20T10:47:07 ART" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method is-config="true" signature="Befoclass()[pri:0, instance:test.day2@34123d65]" started-at="2024-02-20T10:47:07 ART" name="Befoclass" finished-at="2024-02-20T10:47:07 ART" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Befoclass -->
        <test-method signature="ploan()[pri:0, instance:test.day2@34123d65]" started-at="2024-02-20T10:47:07 ART" name="ploan" finished-at="2024-02-20T10:47:07 ART" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- test.day2 -->
      <class name="test.day1">
        <test-method signature="Demo()[pri:0, instance:test.day1@5656be13]" started-at="2024-02-20T10:47:07 ART" name="Demo" finished-at="2024-02-20T10:47:07 ART" duration-ms="43" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at test.day1.Demo(day1.java:18)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="lastexecution()[pri:0, instance:test.day1@5656be13]" started-at="2024-02-20T10:47:07 ART" name="lastexecution" finished-at="2024-02-20T10:47:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
      </class> <!-- test.day1 -->
    </test> <!-- Personal Loan -->
    <test started-at="2024-02-20T10:47:07 ART" name="Car Loan" finished-at="2024-02-20T10:47:07 ART" duration-ms="235">
      <class name="test.day3">
        <test-method is-config="true" signature="Bfsuite()[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="Bfsuite" finished-at="2024-02-20T10:47:07 ART" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bfsuite -->
        <test-method is-config="true" signature="Beforeevery()[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="Beforeevery" finished-at="2024-02-20T10:47:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforeevery -->
        <test-method signature="MobileLoginCarloan()[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="MobileLoginCarloan" finished-at="2024-02-20T10:47:07 ART" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarloan -->
        <test-method is-config="true" signature="Afterevery()[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="Afterevery" finished-at="2024-02-20T10:47:07 ART" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterevery -->
        <test-method is-config="true" signature="Beforeevery()[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="Beforeevery" finished-at="2024-02-20T10:47:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforeevery -->
        <test-method signature="MobileSignoutCarloan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="MobileSignoutCarloan" data-provider="getData" finished-at="2024-02-20T10:47:07 ART" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignoutCarloan -->
        <test-method is-config="true" signature="Afterevery()[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="Afterevery" finished-at="2024-02-20T10:47:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterevery -->
        <test-method signature="MobileSignoutCarloan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="MobileSignoutCarloan" data-provider="getData" finished-at="2024-02-20T10:47:07 ART" duration-ms="19" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignoutCarloan -->
        <test-method is-config="true" signature="Beforeevery()[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="Beforeevery" finished-at="2024-02-20T10:47:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforeevery -->
        <test-method is-config="true" signature="Afterevery()[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="Afterevery" finished-at="2024-02-20T10:47:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterevery -->
        <test-method is-config="true" signature="Beforeevery()[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="Beforeevery" finished-at="2024-02-20T10:47:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforeevery -->
        <test-method signature="MobileSignoutCarloan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="MobileSignoutCarloan" data-provider="getData" finished-at="2024-02-20T10:47:07 ART" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignoutCarloan -->
        <test-method is-config="true" signature="Afterevery()[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="Afterevery" finished-at="2024-02-20T10:47:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterevery -->
        <test-method is-config="true" signature="Beforeevery()[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="Beforeevery" finished-at="2024-02-20T10:47:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforeevery -->
        <test-method signature="WebloginCarloan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="WebloginCarloan" finished-at="2024-02-20T10:47:07 ART" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginCarloan -->
        <test-method is-config="true" signature="Afterevery()[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="Afterevery" finished-at="2024-02-20T10:47:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterevery -->
        <test-method is-config="true" signature="AfterClass()[pri:0, instance:test.day3@3857f613]" started-at="2024-02-20T10:47:07 ART" name="AfterClass" finished-at="2024-02-20T10:47:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- test.day3 -->
      <class name="test.day1">
        <test-method is-config="true" signature="Afsuite()[pri:0, instance:test.day1@5656be13]" started-at="2024-02-20T10:47:07 ART" name="Afsuite" finished-at="2024-02-20T10:47:07 ART" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afsuite -->
      </class> <!-- test.day1 -->
    </test> <!-- Car Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
